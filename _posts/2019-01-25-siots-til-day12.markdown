---
layout: post
title: "12일차 - 정렬 알고리즘"
subtitle: "siots"
categories: siots
tags: til
comments: true
---

# 추후에 정리가 필요한 문서입니다!!!

# 10일차

1. 조알시 - 정렬

# 1. 조알시

## 1. 선택 정렬 Selection Sort

min이라는 애를 하나 두고 여기에 하나씩 넣어본다.

지금 min값과 다음 값을 비교해서 더 작은애를 min과 교체하거나 가만히 두면서 한사이클 다 확인해본다.

가장 작은 min 값을 인덱스0번에 자리를 확정해준다.

두번째 값을 min에 넣어주고 확정된 첫번째 데이터를 빼고 이후 부터 다시 한사이클 확인한다

또 가장 작은 값을 min에 넣어주고...자리 확정해주고..빼고 한사이클 돌리고... 끝까지 돌리면 정렬이 된다.

`시간복잡도 O(n^2)` _(쑤레기)_

하지만 구현하기가 쉬워서 많이 쓰인다.

## 2. 삽입 정렬 Insertion Sort

앞에서부터 조금씩 정렬해나간다

4 1 6 3 2 5 가 있을 때

4를 먼저 자리에 두고 1과 4를 비교해본다.

1이 4보다 작으니까 1은 4 앞으로 삽입된다.

1 4 있을 떄 다음숫자인 6을 확인한다

6은 4보다 크니까 4의 다음으로 삽입된다.

1 4 6 이 있을 때 3을 보고
3은 6보다 작으니 앞으로 4보다 작으니 또 앞으로 1보다는 크니까 1과 4 사이에 삽입된다

시간복잡도 O(n^2)

## 3. 병합(합병) 정렬 Merge sort

쪼갰다가 합쳐서 확인한다.

4 1 6 3 2 5 7 8

둘씩 쪼개서 확인한다.

4 1 6 3 / 2 5 7 8

또 둘씩 쪼갠다

4 1 / 6 3 / 2 5 / 7 8

또 둘씩 쪼갠다

4 / 1 / 6 / 3 / ...

두개씩 합쳐서 확인해본다.

4와 1을 봤을 때 1이 더 작으니까 1 4

6 과 3을 봤을 때 3이 더 작으니까 3 6

1 4 / 3 6 을 비교한다

좌 우의 첫번쨰부터 확인해본다

1 과 3을 비교해서 1이 더 작으니까 1은 자리 고정

4와 3을 비교한다

3이 더 작으니까 3 자리 고정

(1 3이 됐다)

# 2. 디버깅

## 1. 웹에서 쿠키와 세션

### 1. 비연결지향(connectionless)

HTTP 프로토콜의 약점 1
한번의 요청과 응답을 하면 연결을 끊어버린다

### 2. 상태정보유지안함(Stateless)

HTTP 프로토콜의 약점 2
통신이 끝나면 생겼던 상태를 유지하지않는다

연결을 끊는 순간 클라이언트와 서버의 통신이 끝나며 상태 정보는 유지하지 않는 특성이 있다.

쿠키와 세션을 사용했을 경우, 한 번 로그인을 하면 어떠한 방식에 의해서 그 사용자에 대한 인증을 유지하게되므로 HTTP 프로토콜의 이러한 특성에서오는 약점을 보완할 수 있습니다.

## 2. 쿠키

아주 작은 정보 파일

계속 요청에다 쿠키를 실어주니까 트래픽 문제가 있다.

이름+값의 한 쌍의 형태로 저장된다

### 1. 쿠키 프로세스

### 2. 쿠키 구성요소

### 3. 쿠키 종류

세션 : 브라우저가 종료될 떄까지 유지된다

### 4. 쿠키의 단점

### 5. 쿠키의 사용처

## 3. 세션

쿠키의 트래픽 문제와 보안적 이슈를 해결하기 위해 등장했다.

### 1. 세션 프로세스

### 2. 세션의 장점

실제 그 안에 있는 것은 서버에서 데이터를 볼 수 있게 해주는 세션 아이디 이기 떄문에 쿠키보다 보안에 좋다

### 3. 세션의 단점

### 4. 쿠키와 세션의 차이점

세션id를 가지고 있는 쿠키는 무조건 세션쿠키이기 때문에 브라우저가 종료되면 세션쿠키(세션id)도 종료된다.

## 3. 토큰

### 1. 세션-쿠키 방식 인증의 문제점

#### 저장공간

#### 확장성

#### CORS
